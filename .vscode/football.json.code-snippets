{
	// Place your football workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


		"Api Module": {
			"scope" : "javascript",
			"prefix": "apimod",
			"body": [
				"/**",
				"@licence",
				"    Copyright (c) ${1:2020} Alan Chandler, all rights reserved",
				"",
				"    This file is part of Football Mobile.",
				"",
				"    Football Mobile is free software: you can redistribute it and/or modify",
				"    it under the terms of the GNU General Public License as published by",
				"    the Free Software Foundation, either version 3 of the License, or",
				"    (at your option) any later version.",
				"",
				"    Football Mobile is distributed in the hope that it will be useful,",
				"    but WITHOUT ANY WARRANTY; without even the implied warranty of",
				"    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
				"    GNU General Public License for more details.",
				"",
				"    You should have received a copy of the GNU General Public License",
				"    along with Football Mobile.  If not, see <http://www.gnu.org/licenses/>.",
				"*/",
				"",
				"(function() {",
				"  'use strict';",
				"",
				"  const debug = require('debug')('football:api:${2:xxxx}');",
				"  const db = require('../utils/database');",
				"",
				"  module.exports = async function(user, cid, params, responder) {",
				"    debug('new request from user', user.uid, 'with cid', cid );",
				"    $0",
				"  };",
				"})();"
			],
			"description": "API Module"
		},
			"Lit Element": {
				"scope": "javascript",
				"prefix": "fmpage",
				"body": [
					"/**",
					"@licence",
					"    Copyright (c) ${1:2020} Alan Chandler, all rights reserved",
					"",
					"    This file is part of Football Mobile.",
					"",
					"    Football Mobile is free software: you can redistribute it and/or modify",
					"    it under the terms of the GNU General Public License as published by",
					"    the Free Software Foundation, either version 3 of the License, or",
					"    (at your option) any later version.",
					"",
					"    Football Mobile is distributed in the hope that it will be useful,",
					"    but WITHOUT ANY WARRANTY; without even the implied warranty of",
					"    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
					"    GNU General Public License for more details.",
					"",
					"    You should have received a copy of the GNU General Public License",
					"    along with Football Mobile.  If not, see <http://www.gnu.org/licenses/>.",
					"*/",
					"import { LitElement, html } from '../libs/lit-element.js';",
					"",
					"import './app-page.js';",
					"import page from '../styles/page.js';",
					"",
					"/*",
					"     <fm-${3:page}>",
					"*/",
					"class Fm${2:class} extends LitElement {",
					"  static get styles() {",
					"    return [page];",
					"  }",
					"  static get properties() {",
					"    return {",
					"    ${0}",
					"    };",
					"  }",
					"  constructor() {",
					"    super();",
					"  }",
					"  connectedCallback() {",
					"    super.connectedCallback();",
					"  }",
					"  disconnectedCallback() {",
					"    super.disconnectedCallback();",
					"  }",
					"  update(changed) {",
					"    super.update(changed);",
					"  }",
					"  firstUpdated() {",
					"  }",
					"  updated(changed) {",
					"    super.updated(changed);",
					"  }",
					"  render() {",
					"    return html`",
					"				<app-page id=\"page\" heading=\"${4:heading}\">",
					"				</app-page>",	
					"    `;",
					"  }",
					"}",
					"customElements.define('fm-${3:page}', Fm${2:class});"
				],
				"description": "New Page Element"
			}
			
}